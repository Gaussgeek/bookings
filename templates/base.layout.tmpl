{{define "base"}}

<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"
          name="viewport">
    <meta content="ie=edge" http-equiv="X-UA-Compatible">
    <title>Document</title>
</head>
<body>

</body>
</html>>

<html lang="en">

<head>
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1" name="viewport">


    <title>My fabulous page></title>
    <link crossorigin="anonymous" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
          integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.1.4/dist/css/datepicker-bs4.min.css"
          rel="stylesheet">
    <link href="https://unpkg.com/notie/dist/notie.min.css" rel="stylesheet" type="text/css">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@10.15.5/dist/sweetalert2.min.css" rel="stylesheet">
    <link href="/static/css/styles.css" rel="stylesheet" type="text/css">

    <style>

    </style>

</head>

<body>

<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">Navbar</a>
        <button aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation"
                class="navbar-toggler"
                data-bs-target="#navbarSupportedContent" data-bs-toggle="collapse" type="button">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a aria-current="page" class="nav-link active" href="/">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/about/">About</a>
                </li>
                <li class="nav-item dropdown">
                    <a aria-expanded="false" class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#"
                       id="navbarDropdown" role="button">
                        Rooms
                    </a>
                    <ul aria-labelledby="navbarDropdown" class="dropdown-menu">
                        <li><a class="dropdown-item" href="/presidential-suites/">Presidential Suites</a></li>
                        <li><a class="dropdown-item" href="/platinum-rooms/">Platinum rooms</a></li>

                    </ul>
                </li>

                <li class="nav-item">
                    <a aria-disabled="true" class="nav-link" href="/search-availability/" tabindex="-1">Book Now</a>


                <li class="nav-item">
                    <a aria-disabled="true" class="nav-link" href="/contact/" tabindex="-1">Contact</a>
                </li>
            </ul>

        </div>
    </div>
</nav>

{{block "content" .}}

{{end}}

<div class="row my-footer">
    <div class="col">
        Left
    </div>

    <div class="col">
        Middle
    </div>

    <div class="col">
        Right
    </div>

</div>

<script crossorigin="anonymous"
        integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB"
        src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/	popper.min.js"></script>
<script crossorigin="anonymous"
        integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13"
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.1.4/dist/js/datepicker-full.min.js"></script>

<script src="https://unpkg.com/notie"></script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

{{block "js" .}}
{{end}}

<script>

    let attention = Prompt();

    (function () {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        let forms = document.querySelectorAll('.needs-validation');

        // Loop over them and prevent submission
        Array.prototype.slice.call(forms)
            .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated');
                }, false);
            })
    })();


    function notify(msg, msgType) {
        notie.alert({
            type: msgType,// optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
            text: msg,
            // stay: Boolean, // optional, default = false
            //time: Number, // optional, default = 3, minimum = 1,
            //position: String // optional, default = 'top', enum: ['top', 'bottom']
        })
    }

    function notifyModal(title, text, icon, confirmationButtonText) {
        Swal.fire({
            title: title,
            html: text,
            icon: icon,
            confirmButtonText: confirmationButtonText
        })
    }

    function Prompt() {
        let toast = function (c) {
            const {
                msg = "",
                icon = "success",
                position = "top-end",

            } = c;

            const Toast = Swal.mixin({
                toast: true,
                title: msg,
                position: position,
                icon: icon,
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            })

            Toast.fire({})

        }

        let success = function (c) {
            const {
                msg = "",
                title = "",
                footer = "",

            } = c;

            Swal.fire({
                icon: 'success',
                title: title,
                text: msg,
                footer: footer,
            })
        }

        let error = function (c) {
            const {
                msg = "",
                title = "",
                footer = "",

            } = c;

            Swal.fire({
                icon: 'error',
                title: title,
                text: msg,
                footer: footer,
            })
        }

        async function custom(c) {
            const {
                msg = "",
                title = "",

            } = c;

            const {value: result} = await Swal.fire({
                title: title,
                html: msg,
                backdrop: false,
                focusConfirm: false,
                showCancelButton: true,
                willOpen: () => {
                    if (c.willOpen !== undefined) {
                        c.willOpen();
                    }
                },

                didOpen: () => {
                    if (c.didOpen !== undefined) {
                        c.didOpen();
                    }
                },

                preConfirm: () => {
                    return [
                        document.getElementById('start').value,
                        document.getElementById('end').value
                    ]
                },

            })

            if (result) {
                if (result.dismiss !== Swal.DismissReason.cancel) {
                    if (result.value !== "") {
                        if (c.callback !== undefined) {
                            c.callback(result);
                        }
                    } else {
                        c.callback(false);
                    }
                } else {
                    c.callback(false);
                }
            }
        }

        return {
            toast: toast,
            success: success,
            error: error,
            custom: custom,
        }
    }

</script>


</body>

</html>


{{end}}